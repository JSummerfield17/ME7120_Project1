function [totalmass,inertiatensor, cg]=findinertia
% [totalmass,INERTIATENSOR,CG]=FINDINERTIA solves for the inertia tensor
% relative to the center of gravity, as well as the center of gravity
% them to the screen with a pretty lame menu. More later.
  
global restart
global K
global Ks
global M
global nodes
global beamprops
global matprops
global points
global elprops
global element
global Fepsn % Forces representing initial strain
global F     % Prescribed forces
global Fnln  % Forces due to changing coordinate systems. 
global lines
global surfs
global bcs   % Boundary Conditions
global slavedofs
global fs
global fms 
global filename
global Tr 
global Mr
global Kr

mnodevals=sum(M(1:6:size(nodes,1),1:6:size(nodes,1)))';
totalmass=sum(mnodevals);


%Reduce the mass and stiffness matrices via Guyan. For a system
%with 6 rigid body modes, the stiffness matrix shoul be all zeros. 
lslave=length(slavedofs);
if lslave>0% Here we need to reduce out constrained DOFs before
	   % static analysis. Slave DOFs are defined when we apply
	   % constraints or rigid elements.
	   
   i(slavedofs)=zeros(length(slavedofs),1);%pop zeros into the k
					   %indices corresponding
					   %to slave dofs
   i=sort(i); % sort them. This puts the slave coordinates all up
	      % top. 
   master=i(lslave+1:size(nodes,1)*6);%The master coordinates are
				      %the ones that we didn't
				      %reduce out via some
				      %constraints. The master
				      %coordinates are all of the
				      %coordinates after the zero
				      %values in i, but not those
				      %beyond coordinates
				      %corresponding to nodal
				      %DOFS. The upper limit of
				      %size(nodes,1)*6 fixes this
				      %at the last real DOF.
  [Mr,Kr,Tr,master,slave]=guyan(M,K,master);
else
  [Mr,Kr,Tr,master,slave]=guyan(M,K);
end



% Now to find the CG. 

xbar=(nodes(1,:)*mnodevals)/totalmass;
ybar=(nodes(2,:)*mnodevals)/totalmass;
zbar=(nodes(3,:)*mnodevals)/totalmass;

I=Mr-diag([xbar,ybar,zbar])*ones(totalmass)*diag([xbar,ybar,zbar]);

inertiatensor=I;
cg=[xbar,ybar,zbar];


